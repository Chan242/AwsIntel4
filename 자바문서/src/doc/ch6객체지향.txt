ch6객체지향.txt


*객체지향언어(OOP - Object Oriented Programming)

객체지향이론의 기본 개념은 실제 세계는 사물(객체)로 이루어져 있으며,
발생하는 모든 사건들은 사물간의 상호작용이다 라는 것이다

실제 사물의 속성과 기능을 분석한 다음, 데이터(변수)와 함수로 정의함으로써
실제 세계를 컴퓨터 속에 옮겨 놓은 것과 같은 가상세계를 구현하고 
이 가상세계에서 모의실험을 함으로써 많은 시간과 비용을 절약할 수 있다

*객체지향 3대 특징
상속, 캡슐화, 다형성, (추상화)
1.코드의 재사용성이 높다
새로운 코드를 작성할 때 기존의 코드를 이용하여 쉽게 작성할 수 있다
2.코드의 관리가 용이하다
코드간의 관계를 이용해서 적은 노력으로 쉽게 코드를 변경할 수 있다
3.신뢰성이 높은 프로그래밍을 가능하게 한다
제어자와 메서드를 이용해서 데이터를 보호하고 올바른 값을 유지하도록 하며,
코드의 중복을 제거하여 코드의 불일치로 인한 오동작을 방지할 수 있다

코드의 재사용성이 높고 유지보수가 용이하다

공부할 때 주의사항: 너무 객체지향개념에 얽매여서 고민하기 보다는
일단 프로그램을 기능적으로 완성한 다음 
어떻게 하면 보다 객체지향적으로 코드를 개선할 수 있을지를 고민하여
점차 개선해 나가는 것이 좋다

*클래스와 객체

클래스란 객체를 정의해 놓은 것 또는 객체의 설계도 또는 틀이라고 정의한다
클래스는 객체를 생성하는데 사용되며, 객체는 클래스에 정의된 대로 생성된다

클래스 정의: 객체를 정의해 놓은 것
클래스 용도: 클래스는 객체를 생성하는데 사용된다

객체의 사전적 의미는 실제로 존재하는 것이다

객체의 정의: 실제로 존재하는 것. 사물 또는 개념
객체의 용도: 객체가 가지고 있는 기능과 속성에 따라 다름

유형의 객체: 책상, 의자, 자동차, TV와 같은 사물
무형의 객체: 수학공식, 프로그램 에러, 시간, 달력 같은 논리나 개념

클래스		객체
TV설계도		Tv
붕어빵 기계	붕어빵
		인스턴스화
클래스 ---------> 	인스턴스(객체)

*객체의 구성요소 - 속성과 기능
객체는 속성과 기능, 두 종류의 구성요소로 이루어져 있다

속성과 기능의 집합이라고 할 수 있는데 속성과 기능을 그 객체의 멤버(member, 구성원)라 한다

속성(property) - 멤버변수, 특성(attribute), 필드, 상태
기능(function) - 메서드(method), 함수, 행위(behavior)

TV 속성: 크기, 길이, 높이, 볼륨 등
TV 기능: 켜기, 끄기, 볼륨 높이기, 볼륨 낮추기, 채널 변경하기 등


*클래스의 또 다른 정의
클래스 - 데이터와 함수의 결합

변수 -> 배열 -> 구조체 -> 클래스
1.변수 - 하나의 데이터를 저장할 수 있는 공간
2.배열 - 같은 종류의 여러 데이터를 하나의 집합으로 저장할 수 있는 공간
3.구조체 - 서로 관련된 여러 데이터를 종류에 관계없이 하나의 집합으로 저장할 수 있는 공간
4.클래스 - 데이터와 함수의 결합(구조체 + 함수)

*클래스 - 사용자 정의 타입(user-defined type)
프로그래밍 언어에서 제공하는 자료형 외에 프로그래머가 서로 관련된 변수들을
묶어서 하나의 타입으로 추가하는 것을 사용자 정의 타입이라고 한다
클래스 = 사용자 정의 타입이다



